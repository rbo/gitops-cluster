apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: app-immich-chart
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/sync-wave: "111"
spec:
  destination:
    namespace: photos
    server: "https://kubernetes.default.svc"
  source:
    path: charts/immich
    repoURL: "https://github.com/rbo/immich-charts.git"
    targetRevision: onlogic
    helm:
      values: |-

        dnsConfig:
          options:
            - name: ndots
              value: "1"

        immich:
          persistence:
            # Main data store for all photos shared between different components.
            library:
              # Automatically creating the library volume is not supported by this chart
              # You have to specify an existing PVC to use
              existingClaim: app-immich-chart-upload

        redis:
          enabled: true

        postgresql:
          enabled: false

        typesense:
          enabled: true
          persistence:
            tsdata:
              enabled: true
              accessMode: ReadWriteOnce
              size: 8Gi
              storageClass: lvms-vg1

        env:
          DB_HOSTNAME: "app-immich-postgresql-chart.photos.svc.cluster.local."
          DB_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: immich-postgresql
                key: password
          JWT_SECRET:
            valueFrom:
              secretKeyRef:
                name: immich-jwt
                key: password

        # server:
        #   image:
        #     repository: docker.io/altran1502/immich-server
        #     # renovate: datasource=docker depName=docker.io/altran1502/immich-server
        #     tag: v1.52.1

        # microservice:
        #   image:
        #     repository: docker.io/altran1502/immich-server
        #     # renovate: datasource=docker depName=docker.io/altran1502/immich-server
        #     tag: v1.52.1

        machine_learning:
        #   image:
        #     repository: docker.io/altran1502/immich-machine-learning
        #     # renovate: datasource=docker depName=docker.io/altran1502/immich-machine-learning
        #     tag: v1.52.1
        #   command: null
        #   args: []
        #   env:
        #     NODE_ENV: "production"
        #     TRANSFORMERS_CACHE: /usr/src/app/.transformers_cache
          persistence:
            cache:
              enabled: true
              size: 10Gi
              type: pvc
              accessMode: ReadWriteOnce
              storageClass: lvms-vg1

        # web:
        #   image:
        #     repository: docker.io/altran1502/immich-web
        #     # renovate: datasource=docker depName=docker.io/altran1502/immich-web
        #     tag: v1.52.1

        # proxy:
        #   image:
        #     repository: docker.io/altran1502/immich-proxy
        #     # renovate: datasource=docker depName=docker.io/altran1502/immich-proxy
        #     tag: v1.52.1

  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
